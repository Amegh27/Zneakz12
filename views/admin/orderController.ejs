<%- include('../partials/admin/header') %>

<style>
  /* ===== CSS Variables & Theme ===== */
  :root {
    --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    --dark-bg: #111;
    --light-bg: #f8f6f6;
    --card-bg: #ffffff;
    --text-primary: #1a1a1a;
    --text-secondary: #666;
    --border-color: #e0e0e0;
    --shadow-sm: 0 2px 8px rgba(0, 0, 0, 0.08);
    --shadow-md: 0 4px 16px rgba(0, 0, 0, 0.12);
    --shadow-lg: 0 8px 24px rgba(0, 0, 0, 0.15);
    --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  * {
    transition: var(--transition);
  }

  body {
    background: var(--light-bg);
    color: var(--text-primary);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }

  /* ===== Container & Layout ===== */
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  /* ===== Header ===== */
  h2 {
    font-size: 2rem;
    font-weight: 700;
    background: var(--primary-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 2rem;
    letter-spacing: -0.5px;
  }

  /* ===== Search & Filter Form ===== */
  .search-filter-form {
    background: var(--card-bg);
    padding: 1.5rem;
    border-radius: 12px;
    box-shadow: var(--shadow-md);
    margin-bottom: 2rem;
    border: 1px solid var(--border-color);
  }

  .form-control,
  .form-select {
    border: 1.5px solid var(--border-color);
    border-radius: 8px;
    padding: 0.75rem 1rem;
    font-size: 0.95rem;
    background-color: #fafafa;
    color: var(--text-primary);
    transition: var(--transition);
    margin-top: 10px;
  }

  .form-control:focus,
  .form-select:focus {
    border-color: #667eea;
    background-color: #fff;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    outline: none;
  }

  .form-control::placeholder {
    color: var(--text-secondary);
  }

  /* ===== Buttons ===== */
  .btn {
    border-radius: 8px;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    border: none;
    cursor: pointer;
    transition: var(--transition);
    position: relative;
    overflow: hidden;
  }

  .btn-dark {
    background: var(--primary-gradient);
    color: white;
    box-shadow: var(--shadow-md);
    margin-top: 10px;
  }

  .btn-dark:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }

  .btn-outline-secondary {
    border: 1.5px solid var(--border-color);
    color: var(--text-primary);
    background: transparent;
  }

  .btn-outline-secondary:hover {
    background: #f5f5f5;
    border-color: #667eea;
    color: #667eea;
  }

  /* ===== Empty State ===== */
  .empty-state {
    background: var(--card-bg);
    padding: 3rem 2rem;
    border-radius: 12px;
    box-shadow: var(--shadow-md);
    text-align: center;
    border: 2px dashed var(--border-color);
  }

  .empty-state h5 {
    color: var(--text-secondary);
    font-size: 1.1rem;
  }

  /* ===== Order Cards ===== */
  .order-card {
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    box-shadow: var(--shadow-md);
    margin-bottom: 1.5rem;
    overflow: hidden;
    transition: var(--transition);
  }

  .order-card:hover {
    box-shadow: var(--shadow-lg);
    transform: translateY(-2px);
    border-color: #667eea;
  }

  .order-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: var(--primary-gradient);
    opacity: 0;
    transition: var(--transition);
  }

  .order-card:hover::before {
    opacity: 1;
  }

  .card-header {
    background: linear-gradient(135deg, #f5f7fa 0%, #f0f2f5 100%);
    padding: 1.25rem;
    border-bottom: 1px solid var(--border-color);
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .card-header strong {
    color: var(--text-primary);
    font-weight: 700;
  }

  .card-header small {
    color: var(--text-secondary);
    font-size: 0.85rem;
  }

  .card-body {
    padding: 1.5rem;
  }

  /* ===== Status Badge ===== */
  .badge {
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-weight: 600;
    font-size: 0.85rem;
    letter-spacing: 0.5px;
  }

  .bg-danger {
    background: linear-gradient(135deg, #a90202 0%, #c80303 100%) !important;
  }

  .bg-success {
    background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%) !important;
  }

  .bg-primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
  }

  .bg-warning {
    background: linear-gradient(135deg, #f0a910 0%, #edaf06 100%) !important;
    color: white !important;
  }

  .bg-secondary {
    background: linear-gradient(135deg, #05e177 0%, #39e305 100%) !important;
  }

  /* ===== Product List ===== */
  .list-group {
    border: none;
  }
  .search-filter-form {
  margin-bottom: 2.5rem;
}


  .list-group-item {
    background: #fafafa;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    margin-bottom: 0.75rem;
    padding: 1rem;
    transition: var(--transition);
    border-left: 4px solid #667eea;
  }

  .list-group-item:hover {
    background: #f5f5f5;
    box-shadow: var(--shadow-sm);
    transform: translateX(4px);
  }
.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  gap: 1rem;
  overflow: visible; 
}

.card-header > div:last-child {
  min-width: 150px;
  flex-shrink: 0;
}



  .list-group-item strong {
    color: var(--text-primary);
    font-weight: 700;
  }

  .list-group-item small {
    color: var(--text-secondary);
    font-size: 0.85rem;
  }

  /* ===== Status Select ===== */
  .status-update {
    border: 1.5px solid var(--border-color);
    border-radius: 6px;
    padding: 0.5rem 0.75rem;
    font-weight: 600;
    background: white;
    cursor: pointer;
    transition: var(--transition);
  }

  .status-update:hover,
  .status-update:focus {
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  }

  /* ===== Total Amount ===== */
  .total-amount {
    font-size: 1.25rem;
    font-weight: 700;
    background: var(--primary-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* ===== Pagination ===== */
  .pagination {
    display: flex;
    gap: 0.5rem;
    justify-content: center;
    margin-top: 2rem;
  }

  .page-item .page-link {
    border: 1.5px solid var(--border-color);
    border-radius: 6px;
    color: var(--text-primary);
    padding: 0.5rem 0.75rem;
    transition: var(--transition);
    cursor: pointer;
  }

  .page-item .page-link:hover {
    background: var(--primary-gradient);
    color: white;
    border-color: transparent;
  }

  .page-item.active .page-link {
    background: var(--primary-gradient);
    color: white;
    border-color: transparent;
  }

  /* ===== Animations ===== */
  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .order-card {
    animation: slideInUp 0.5s ease-out forwards;
  }

  .order-card:nth-child(1) { animation-delay: 0.1s; }
  .order-card:nth-child(2) { animation-delay: 0.2s; }
  .order-card:nth-child(3) { animation-delay: 0.3s; }
  .order-card:nth-child(n+4) { animation-delay: 0.4s; }

  /* ===== Responsive ===== */
  @media (max-width: 768px) {
    h2 {
      font-size: 1.5rem;
    }

    .card-header {
      flex-direction: column;
      align-items: flex-start;
    }

    .status-update {
      width: 100%;
    }

    .search-filter-form .row {
      flex-direction: column;
    }

    .search-filter-form .col-md-4,
    .search-filter-form .col-md-3,
    .search-filter-form .col-md-2 {
      width: 100%;
    }
  }
</style>

<div class="container">
  <h2>Order Management</h2>

  <form class="search-filter-form row g-3 align-items-end" method="GET" action="/admin/orders">
  <div class="col-md-4">
<input 
  type="text" 
  name="q" 
  value="<%= q %>" 
  placeholder="Search by Product Name" 
  class="form-control"
/>


  </div>

  <div class="col-md-3">
    <select name="status" class="form-select">
      <option value="">All Status</option>
      <% statuses.forEach(s => { %>
        <option value="<%= s %>" <%= s===status?'selected':'' %>><%= s %></option>
      <% }) %>
    </select>
  </div>

  <div class="col-md-2 d-flex gap-2">
    <button class="btn btn-dark flex-fill">Search</button>
    <% if ((q && q.trim() !== "") || (status && status !== "")) { %>
      <a href="/admin/orders" class="btn btn-outline-secondary flex-fill">Clear</a>
    <% } %>
  </div>
</form>


  <% if (orders.length === 0) { %>
    <div class="empty-state">
      <h5>No orders found.</h5>
    </div>
  <% } else { %>
    <% orders.forEach(order => { %>
      <div class="order-card">
        <div class="card-header">
          <div>
            <strong>Order:</strong> <%= order.orderID %> | 
            <small><%= new Date(order.createdAt).toLocaleString() %></small> |
            <strong>User:</strong> <%= order.user?.name || 'N/A' %>
          </div>
        </div>

        <% 
          let displayStatus = order.status;
          if (order.items.some(item => item.status === 'Cancelled') && order.items.some(item => item.status !== 'Cancelled')) {
            displayStatus = 'Partially Cancelled';
          }
        %>

        <h6>Status: 
          <span class="badge 
            <%= displayStatus==='Cancelled' ? 'bg-danger' 
            : displayStatus==='Delivered' ? 'bg-success' 
            : displayStatus==='Shipped' ? 'bg-primary' 
            : displayStatus==='Partially Cancelled' ? 'bg-warning' 
            : 'bg-secondary' %>">
            <%= displayStatus %>
          </span>
        </h6>

        <h6 class="mt-3">Products</h6>
        <ul class="list-group mb-3">
       <% order.items.forEach(item => { %>
  <li class="list-group-item d-flex justify-content-between align-items-center">
    <div>
      <strong><%= item.product?.productName %></strong>
      <div><small>Qty: <%= item.quantity %> | ₹<%= item.price %> | Size: <%= item.size %></small></div>
      <div>
        <small>
          Status: <%= item.status %>
          <% if (item.returnStatus && item.returnStatus !== 'None') { %>
            | Return: <%= item.returnStatus %>
          <% } %>
        </small>
      </div>
    </div>

    <!-- Status dropdown: only if item is not cancelled and not returned -->
    <% if (item.status !== 'Cancelled' && (!item.returnStatus || item.returnStatus === 'None')) { %>
  <div style="min-width:150px; flex-shrink:0;">
    <select class="form-select form-select-sm item-status-update" 
            data-order="<%= order._id %>" 
            data-item="<%= item._id %>">
      <% statuses.filter(s => s !== 'Cancelled' && s !== 'Partially Cancelled').forEach(s => { %>
        <option value="<%= s %>" <%= s === item.status ? 'selected' : '' %>><%= s %></option>
      <% }) %>
    </select>
  </div>
<% } %>

  </li>
<% }) %>


        </ul>

        <div class="d-flex justify-content-between align-items-center">
          <h6 class="total-amount">Total: ₹<%= order.totalAmount.toFixed(2) %></h6>
        </div>
      </div>
    <% }) %>
  <% } %>

  <nav aria-label="pages">
    <ul class="pagination">
      <% for (let i=1; i<=pages; i++) { %>
        <li class="page-item <%= i===page ? 'active' : '' %>">
          <a class="page-link" href="?page=<%= i %>&q=<%= q %>&status=<%= status %>"><%= i %></a>
        </li>
      <% } %>
    </ul>
  </nav>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  // Update individual item status
  document.querySelectorAll('.item-status-update').forEach(sel => {
    sel.addEventListener('change', async function() {
      const orderId = this.dataset.order;
      const itemId = this.dataset.item;
      const newStatus = this.value;

      const confirm = await Swal.fire({
        title: `Change item status to "${newStatus}"?`,
        showCancelButton: true
      });
      if (!confirm.isConfirmed) {
        this.value = this.querySelector('option[selected]')?.value || 'Placed';
        return;
      }

      try {
        const res = await fetch(`/admin/orders/${orderId}/items/${itemId}/status`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status: newStatus })
        });
        const data = await res.json();
        if (data.success) {
          Swal.fire('Updated', data.message, 'success');
          const small = sel.closest('.list-group-item').querySelector('small:last-child');
          small.textContent = `Status: ${newStatus}`;
        } else {
          Swal.fire('Error', data.message || 'Failed', 'error');
        }
      } catch (err) {
        console.error(err);
        Swal.fire('Error', 'Something went wrong', 'error');
      }
    });
  });

  document.querySelectorAll('.approve-return').forEach(btn => {
  btn.addEventListener('click', async function() {
    const orderId = this.dataset.order;
    const itemId = this.dataset.item;

    const res = await fetch(`/admin/orders/${orderId}/items/${itemId}/return/approve`, { method: 'POST' });
    const data = await res.json();
    if (data.success) location.reload();
    else Swal.fire('Error', data.message || 'Something went wrong', 'error');
  });
});

document.querySelectorAll('.reject-return').forEach(btn => {
  btn.addEventListener('click', async function() {
    const orderId = this.dataset.order;
    const itemId = this.dataset.item;

    const res = await fetch(`/admin/orders/${orderId}/items/${itemId}/return/reject`, { method: 'POST' });
    const data = await res.json();
    if (data.success) location.reload();
    else Swal.fire('Error', data.message || 'Something went wrong', 'error');
  });
});

  
</script>
<%- include('../partials/admin/footer') %>
