<%- include("../partials/admin/header") %>

<head>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" />
  <style>
    body {
      font-family: 'Inter', 'Segoe UI', Tahoma, sans-serif;
      font-size: 16px;
      background-color: #f8f9fa;
      color: #2c3e50;
      margin: 0;
      padding: 0;
    }

    .content-header {
      padding: 24px 30px;
      background-color: #ffffff;
      border-bottom: 1px solid #e8ecf1;
      margin-bottom: 24px;
    }

    .content-title {
      font-size: 26px;
      font-weight: 700;
      color: #1a202c;
      margin: 0;
    }

    .card {
      background: #ffffff;
      border-radius: 10px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
      padding: 24px;
      margin: 20px;
    }

    .form-label {
      font-weight: 600;
      margin-bottom: 8px;
      display: block;
      color: #2c3e50;
      font-size: 14px;
    }

    .form-control {
      width: 100%;
      padding: 10px 12px;
      font-size: 14px;
      border: 1px solid #e0e6ed;
      border-radius: 6px;
      margin-bottom: 16px;
      transition: all 0.2s ease;
      font-family: 'Inter', sans-serif;
    }

    .form-control:focus {
      outline: none;
      border-color: #ff6b35;
      box-shadow: 0 0 0 3px rgba(255, 107, 53, 0.1);
    }

    .btn-primary {
      background-color: #ff6b35;
      color: #fff;
      border: none;
      padding: 10px 16px;
      font-size: 14px;
      font-weight: 600;
      border-radius: 6px;
      cursor: pointer;
      transition: all 0.2s ease;
      width: 100%;
    }

    .btn-primary:hover {
      background-color: #e55a24;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(255, 107, 53, 0.3);
    }

    .table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 16px;
      font-size: 14px;
    }

    .table thead {
      background-color: #f8f9fa;
    }

    .table th {
      padding: 12px 16px;
      text-align: left;
      border-bottom: 2px solid #e8ecf1;
      font-weight: 600;
      color: #2c3e50;
      font-size: 13px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .table td {
      padding: 12px 16px;
      text-align: left;
      border-bottom: 1px solid #e8ecf1;
    }

    .table tbody tr {
      transition: background-color 0.2s ease;
    }

    .table tbody tr:hover {
      background-color: #f8f9fa;
    }

    .badge {
      padding: 5px 10px;
      border-radius: 6px;
      font-size: 12px;
      font-weight: 600;
      display: inline-block;
    }

    .alert-success {
      background-color: #d4f4dd;
      color: #0d5c2f;
    }

    .alert-danger {
      background-color: #fdd5d0;
      color: #7a1f1a;
    }

    .btn {
      padding: 8px 14px;
      border: none;
      border-radius: 6px;
      font-size: 13px;
      font-weight: 600;
      cursor: pointer;
      margin-right: 6px;
      transition: all 0.2s ease;
      display: inline-block;
    }

    .btn-danger {
      background-color: #ef4444;
      color: #fff;
    }

    .btn-danger:hover {
      background-color: #dc2626;
      transform: translateY(-1px);
    }

    .btn-success {
      background-color: #10b981;
      color: #fff;
    }

    .btn-success:hover {
      background-color: #059669;
      transform: translateY(-1px);
    }

    .btn-info {
      background-color: #3b82f6;
      color: #fff;
      margin-top: 4px;
    }

    .btn-info:hover {
      background-color: #2563eb;
      transform: translateY(-1px);
    }

    .btn a {
      color: white;
      text-decoration: none;
    }

    .btn a:hover {
      text-decoration: none;
    }

    .input-group {
      max-width: 450px;
      margin: 0 auto;
      display: flex;
      border-radius: 6px;
      overflow: hidden;
      background-color: #fff;
      border: 1px solid #e0e6ed;
      transition: all 0.2s ease;
    }

    .input-group:focus-within {
      border-color: #121110;
      box-shadow: 0 0 0 3px rgba(255, 107, 53, 0.1);
    }

    .input-group input {
      flex: 1;
      border: none;
      padding: 10px 12px;
      outline: none;
      font-size: 14px;
      font-family: 'Inter', sans-serif;
    }

    .input-group button {
      background-color: #110a08;
      color: #fff;
      border: none;
      padding: 0 16px;
      cursor: pointer;
      transition: all 0.2s ease;
      font-weight: 600;
      font-size: 13px;
    }

    .input-group button:hover {
      background-color: #032a5a;
    }

    .pagination-container {
      text-align: center;
      margin-top: 24px;
    }

    .pagination a,
    .pagination .current-page {
      display: inline-block;
      padding: 8px 12px;
      margin: 0 4px;
      border-radius: 6px;
      background-color: #fff;
      border: 1px solid #e0e6ed;
      text-decoration: none;
      color: #ff6b35;
      font-weight: 600;
      font-size: 13px;
      transition: all 0.2s ease;
    }

    .pagination .current-page {
      background-color: #ff6b35;
      color: #fff;
      border-color: #ff6b35;
    }

    .pagination a:hover {
      background-color: #fff5f0;
      border-color: #ff6b35;
    }

    .error-message {
      color: #ef4444;
      font-size: 13px;
      margin-top: -12px;
      margin-bottom: 10px;
      font-weight: 500;
    }

    .card-header {
      margin-bottom: 20px;
    }

    .card-body {
      padding: 0;
    }

    .row {
      display: flex;
      gap: 24px;
    }

    .col-md-3 {
      flex: 0 0 25%;
    }

    .col-md-8 {
      flex: 1;
    }

    .ml-10 {
      margin-left: 0;
    }

    .mb-4 {
      margin-bottom: 16px;
    }

    .mb-20 {
      margin-bottom: 20px;
    }

    .d-grid {
      display: grid;
    }

    .text-center {
      text-align: center;
    }

    .text-start {
      text-align: left;
    }

    .text-white {
      color: white;
    }

    .table-responsive {
      overflow-x: auto;
    }

    @media (max-width: 768px) {
      .card {
        margin: 10px;
        padding: 16px;
      }

      .row {
        flex-direction: column;
        gap: 16px;
      }

      .col-md-3,
      .col-md-8 {
        flex: 1 1 100%;
      }

      .input-group {
        max-width: 100%;
        margin-left: 0;
      }

      .table th,
      .table td {
        font-size: 12px;
        padding: 8px 12px;
      }

      .btn {
        padding: 6px 10px;
        font-size: 12px;
      }
    }
  </style>
</head>

<body>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title">Category</h2>
      </div>
    </div>
    <header class="card-header text-center mb-20">
      <form action="/admin/category" method="get" class="d-inline">
        <div class="input-group">
          <input
            type="text"
            name="search"
            class="form-control"
            placeholder="Search categories"
            value="<%= searchQuery || '' %>"
          />
          <button class="btn" type="submit">Search</button>

          <% if (searchQuery && searchQuery.trim() !== '') { %>
            <a href="/admin/category" class="btn">Clear</a>
          <% } %>
        </div>
      </form>
    </header>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name"/>
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId"></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">
                  Create category
                </button>
              </div>
            </form>
          </div>
          <div class="col-md-8">
            <div class="table-responsive">
              <table class="table">
                <thead>
                  <tr>
                    <th></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th class="text-start">Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.reverse().forEach((category)=> { %>
                    <tr>
                      <td></td>
                      <td class="text-start">
                        <%=category.name%>
                      </td>
                      <td class="text-start">
                        <%=category.description%>
                      </td>
                      <td>
                      </td>
                      <td class="text-start">
                        <button class="btn btn-info" style="width: 100px">
                          <a href="#" class="text-white">Add Offer</a>
                        </button>
                        <button class="btn btn-info" style="width: 100px">
                          <a href="#" class="text-white">Remove</a>
                        </button>
                      </td>
                      <td class="text-start">
                        <% if (category.isListed) { %>
                          <span class="badge alert-success">Listed</span>
                          <% } else { %>
                            <span class="badge alert-danger">Unlisted</span>
                            <% } %>
                      </td>
                      <td class="text-start">
                        <% if (category.isListed) { %>
                          <button class="btn btn-danger swal-unlist" data-id="<%= category._id %>" style="width: 70px">
                            Unlist
                          </button>
                        <% } else { %>
                          <button class="btn btn-success swal-list" data-id="<%= category._id %>" style="width: 70px">
                            List
                          </button>
                        <% } %>
                      </td>
                      <td class="text-start">
                        <a href="edit-category/<%= category._id %>" class="btn btn-primary">Edit</a>
                      </td>
                    </tr>
                    <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="pagination-container">
      <div class="pagination-container">
        <% if (currentPage > 1) { %>
          <a href="?page=<%= currentPage - 1 %><%= searchQuery ? '&search=' + encodeURIComponent(searchQuery) : '' %>">&laquo; Previous</a>
        <% } %>

        <% for (let i = 1; i <= totalPages; i++) { %>
          <% if (i === currentPage) { %>
            <span class="current-page"><%= i %></span>
          <% } else { %>
            <a href="?page=<%= i %><%= searchQuery ? '&search=' + encodeURIComponent(searchQuery) : '' %>"><%= i %></a>
          <% } %>
        <% } %>

        <% if (currentPage < totalPages) { %>
          <a href="?page=<%= currentPage + 1 %><%= searchQuery ? '&search=' + encodeURIComponent(searchQuery) : '' %>">Next &raquo;</a>
        <% } %>
      </div>
    </div>
  </section>
  <%- include("../partials/admin/footer") %>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script>
    function handleFormSubmit(event) {
      event.preventDefault()
      if (!validateForm()) {
        return
      }

      const nameInput = document.getElementsByName("name")[0];
      const descriptionInput = document.getElementById("descriptionId");

      const name = nameInput.value.trim();
      const description = descriptionInput.value.trim();

      fetch('/admin/addCategory', {
        method: "POST",
        headers: {
          'content-type': 'application/json'
        },
        body: JSON.stringify({ name, description })
      })
        .then(response => {
          if (!response.ok) {
            return response.json().then(err => {
              throw new Error(err.error)
            })
          }
          return response.json()
        })
        .then(data => {
          location.reload()
        })
        .catch(error => {
          if (error.message === "Category already exists") {
            Swal.fire({
              icon: 'error',
              title: 'Oops',
              text: 'Category already exists'
            })
          } else {
            Swal.fire({
              icon: "error",
              title: "oops",
              text: "An error occured while ading the category"
            })
          }
        })
    }

    function validateForm() {
      clearErrorMessages()
      const name = document.getElementsByName("name")[0].value.trim()
      const description = document.getElementById("descriptionId").value.trim()
      let isValid = true

      if (name === "") {
        displayErrorMessage("name-error", "Please enter a name")
        isValid = false
      } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage("name-error", "Category name should contain only alphabetic characters")
        isValid = false
      }
      if (description === "") {
        displayErrorMessage("description-error", "Please enter a description")
        isValid = false
      }
      return isValid
    }

    function displayErrorMessage(elementId, message) {
      var errorElement = document.getElementById(elementId)
      errorElement.innerText = message
      errorElement.style.display = "block"
    }

    function clearErrorMessages() {
      const errorElements = document.getElementsByClassName("error-message")
      Array.from(errorElements).forEach((element) => {
        element.innerText = ""
        element.style.display = "none"
      })
    }

    $(document).on('click', '.swal-unlist', function (e) {
      e.preventDefault();
      const categoryId = $(this).data('id');

      Swal.fire({
        title: 'Unlist Category?',
        text: 'This category will be hidden from users.',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#ff6b35',
        cancelButtonColor: '#ef4444',
        confirmButtonText: 'Yes, Unlist',
        cancelButtonText: 'Cancel',
        background: '#fff',
        customClass: {
          popup: 'rounded-3 shadow-lg',
          title: 'fw-bold',
        }
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/unlistCategory?id=${categoryId}`, { method: 'GET' })
            .then(res => {
              if (!res.ok) throw new Error();
              Swal.fire({
                icon: 'success',
                title: 'Category Unlisted',
                showConfirmButton: false,
                timer: 1000
              }).then(() => location.reload());
            })
            .catch(() => {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to unlist category.'
              });
            });
        }
      });
    });

    $(document).on('click', '.swal-list', function (e) {
      e.preventDefault();
      const categoryId = $(this).data('id');

      Swal.fire({
        title: 'List Category?',
        text: 'This category will be visible to users.',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#10b981',
        cancelButtonColor: '#ef4444',
        confirmButtonText: 'Yes, List',
        cancelButtonText: 'Cancel',
        background: '#fff',
        customClass: {
          popup: 'rounded-3 shadow-lg',
          title: 'fw-bold',
        }
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/listCategory?id=${categoryId}`, { method: 'GET' })
            .then(res => {
              if (!res.ok) throw new Error();
              Swal.fire({
                icon: 'success',
                title: 'Category Listed',
                showConfirmButton: false,
                timer: 1000
              }).then(() => location.reload());
            })
            .catch(() => {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to list category.'
              });
            });
        }
      });
    });
  </script>
</body>

</html>
