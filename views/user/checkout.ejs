<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Checkout - ZNEAKZ</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-light">

<div class="container py-5">
  <h3 class="mb-4 text-center">Checkout</h3>

  <div class="row">
    <!-- Addresses -->
    <div class="col-md-6 checkout-address-section section-card mb-4">
      <h4>Delivery Address</h4>

      <% if(addresses && addresses.length > 0) { %>
        <% addresses.forEach((addr, index) => { %>
          <div class="form-check mb-2">
            <input class="form-check-input" type="radio" name="selectedAddress" id="addr<%= index %>" value="<%= index %>" <%= index === 0 ? 'checked' : '' %>>
            <label class="form-check-label" for="addr<%= index %>">
              <strong><%= addr.name %></strong>, <%= addr.city %>, <%= addr.state %> - <%= addr.pincode %>
            </label>
          </div>
        <% }) %>
      <% } else { %>
        <p>No address found. Please add a new address.</p>
      <% } %>

      <button type="button" id="addNewAddressBtn" class="btn btn-outline-dark mt-2">Add New Address</button>

      <!-- New Address Form Modal -->
      <div id="newAddressModal" style="display:none;">
        <form id="newAddressForm" class="p-3 border rounded bg-white mt-3">
          <h5 class="mb-3">Add New Address</h5>
          <input type="text" name="name" placeholder="Full Name" class="form-control mb-2" required>
          <input type="text" name="phone" placeholder="Phone" class="form-control mb-2" required>
          <input type="text" name="street" placeholder="Street" class="form-control mb-2" required>
          <input type="text" name="city" placeholder="City" class="form-control mb-2" required>
          <input type="text" name="state" placeholder="State" class="form-control mb-2" required>
          <input type="text" name="pincode" placeholder="Pincode" class="form-control mb-2" required>
          <div class="form-check mb-2">
            <input type="checkbox" name="isDefault" class="form-check-input" id="defaultCheck">
            <label class="form-check-label" for="defaultCheck">Set as default</label>
          </div>
          <button type="submit" class="btn btn-dark">Save Address</button>
          <button type="button" id="closeAddressModal" class="btn btn-secondary ms-2">Cancel</button>
        </form>
      </div>
    </div>

    <!-- Order Summary -->
    <div class="col-md-6">
      <h5>Order Summary</h5>
      <div class="card">
        <div class="card-body">
          <% if(cart && cart.items.length > 0) { %>
            <% cart.items.forEach(item => { %>
              <div class="d-flex justify-content-between border-bottom py-2">
                <div>
                  <img src="/uploads/products/<%= item.product.productImage[0] %>" width="50" height="50">
                  <span><%= item.product.productName %> (x<%= item.quantity %>)</span>
                </div>
                <div>₹<%= (item.product.discountPrice || item.product.price) * item.quantity %></div>
              </div>
            <% }) %>

            <hr>
            <div class="d-flex justify-content-between"><span>Subtotal:</span><span>₹<%= subtotal %></span></div>
            <div class="d-flex justify-content-between"><span>Tax (5%):</span><span>₹<%= tax.toFixed(2) %></span></div>
            <div class="d-flex justify-content-between"><span>Shipping:</span><span>₹<%= shipping %></span></div>
            <div class="d-flex justify-content-between"><strong>Total:</strong><strong>₹<%= finalTotal.toFixed(2) %></strong></div>

            <button id="placeOrderBtn" class="btn btn-primary w-100 mt-3">Place Order (COD)</button>
          <% } else { %>
            <p class="text-center">Your cart is empty.</p>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // PLACE ORDER
  document.getElementById("placeOrderBtn")?.addEventListener("click", async () => {
    const addressIndex = document.querySelector('input[name="selectedAddress"]:checked')?.value;
    if (addressIndex === undefined) {
      return Swal.fire({ icon: 'warning', title: 'No Address Selected', text: 'Please select an address.' });
    }

    try {
      const res = await fetch("/checkout/place-order", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ addressIndex })
      });
      const data = await res.json();
      if (data.success) {
        window.location.href = data.redirect;
      } else {
        Swal.fire({ icon: 'error', title: 'Order Failed', text: data.message || 'Something went wrong.' });
      }
    } catch (err) {
      console.error(err);
      Swal.fire({ icon: 'error', title: 'Server Error', text: 'Unable to place order.' });
    }
  });

  // SHOW/HIDE NEW ADDRESS MODAL
  const addNewAddressBtn = document.getElementById("addNewAddressBtn");
  const newAddressModal = document.getElementById("newAddressModal");
  const closeAddressModal = document.getElementById("closeAddressModal");

  addNewAddressBtn.addEventListener("click", () => {
    newAddressModal.style.display = "block";
  });

  closeAddressModal.addEventListener("click", () => {
    newAddressModal.style.display = "none";
  });

  // SUBMIT NEW ADDRESS
  document.getElementById("newAddressForm").addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = Object.fromEntries(new FormData(e.target).entries());
    formData.isDefault = formData.isDefault === "on";

    try {
      const res = await fetch("/user/address/add", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(formData)
      });
      const data = await res.json();
      if(data.success){
        Swal.fire({ icon: 'success', title: 'Success', text: data.message }).then(() => {
          window.location.reload();
        });
      } else {
        Swal.fire({ icon: 'error', title: 'Error', text: data.message });
      }
    } catch(err){
      Swal.fire({ icon: 'error', title: 'Error', text: 'Server error' });
    }
  });
</script>

</body>
</html>
