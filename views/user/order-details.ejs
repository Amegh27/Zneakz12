<%- include("../partials/user/header2") %>

<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    background: linear-gradient(135deg, #f5f5f5 0%, #ffffff 100%);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    min-height: 100vh;
    padding: 40px 0;
  }

  .container {
    max-width: 900px;
  }

  h2 {
    font-size: 2.5rem;
    font-weight: 700;
    color: #1a1a1a;
    margin-bottom: 40px;
    letter-spacing: -0.5px;
    animation: fadeInDown 0.6s ease-out;
  }

  .card {
    border: none;
    border-radius: 16px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.08);
    background: #ffffff;
    transition: all 0.3s ease;
    animation: fadeInUp 0.6s ease-out;
  }

  .card:hover {
    box-shadow: 0 15px 50px rgba(0, 0, 0, 0.12);
  }

  .card p {
    color: #333;
    font-size: 1rem;
    line-height: 1.6;
    margin-bottom: 12px;
  }

  .card p strong {
    color: #1a1a1a;
    font-weight: 600;
  }

  .text-muted {
    color: #666 !important;
  }

  h5 {
    font-size: 1.3rem;
    font-weight: 700;
    color: #1a1a1a;
    margin-top: 30px;
    margin-bottom: 20px;
    padding-bottom: 10px;
    border-bottom: 2px solid #f0f0f0;
  }

  .order-item {
    border-bottom: 1px solid #f0f0f0;
    padding: 20px 0;
    margin-bottom: 0;
    display: flex;
    align-items: center;
    transition: all 0.3s ease;
  }

  .order-item:hover {
    background: #fafafa;
    padding-left: 10px;
    padding-right: 10px;
    border-radius: 8px;
  }

  .order-item img {
    width: 80px;
    height: 80px;
    object-fit: cover;
    margin-right: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .order-item img:hover {
    transform: scale(1.05);
  }

  .order-item strong {
    color: #1a1a1a;
    font-size: 1.05rem;
  }

  .list-unstyled {
    list-style: none;
  }

  .list-group-item {
    border: 1px solid #f0f0f0;
    background: #fafafa;
    padding: 16px;
    margin-bottom: 10px;
    border-radius: 8px;
    transition: all 0.3s ease;
  }

  .list-group-item:hover {
    background: #f5f5f5;
    border-color: #ddd;
  }

  .list-group-item strong {
    color: #1a1a1a;
  }

  .summary-box {
    border: 2px solid #f0f0f0;
    border-radius: 12px;
    background: linear-gradient(135deg, #fafafa 0%, #ffffff 100%);
    padding: 25px;
    margin-top: 30px;
    transition: all 0.3s ease;
  }

  .summary-box:hover {
    border-color: #ddd;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.06);
  }

  .summary-box h5 {
    margin-top: 0;
    border-bottom: 2px solid #e0e0e0;
  }

  .summary-box p {
    display: flex;
    justify-content: space-between;
    font-size: 1rem;
    color: #555;
    margin-bottom: 12px;
  }

  .summary-box hr {
    border: none;
    border-top: 2px solid #e0e0e0;
    margin: 15px 0;
  }

  .summary-box h5:last-of-type {
    color: #1a1a1a;
    font-size: 1.4rem;
    text-align: right;
    border: none;
    margin-top: 10px;
    padding-bottom: 0;
  }

  .btn {
    font-weight: 600;
    padding: 10px 24px;
    border-radius: 8px;
    transition: all 0.3s ease;
    font-size: 0.95rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .btn-danger {
    background: #dc3545;
    border: none;
    color: white;
  }

  .btn-danger:hover {
    background: #c82333;
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(220, 53, 69, 0.3);
  }

  .btn-outline-success {
    color: #28a745;
    border: 2px solid #28a745;
    background: white;
  }

  .btn-outline-success:hover {
    background: #28a745;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(40, 167, 69, 0.3);
  }

  .btn-outline-dark {
    color: #1a1a1a;
    border: 2px solid #1a1a1a;
    background: white;
  }
  .status.out-for-delivery {
  background-color: #fff3cd;
  color: #856404;
  font-weight: 700;
  font-style: italic;
}

  .btn-outline-dark:hover {
    background: #1a1a1a;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(26, 26, 26, 0.3);
  }

  .btn-sm {
    padding: 6px 16px;
    font-size: 0.85rem;
  }

  .cancel-btn {
    margin-left: 10px;
  }

  #btnn {
    margin-top: 30px;
    display: inline-block;
    animation: fadeInUp 0.8s ease-out 0.2s both;
  }
  .status.partially-cancelled {
  background-color: #fff3cd;
  color: #856404;
}


  .d-flex {
    gap: 12px;
  }

  .status {
  font-weight: 700;
  padding: 6px 14px;
  border-radius: 20px;
  display: inline-block;
  font-size: 0.9rem;
}

.status.returned {
  background-color: #e2ffe2;
  color: #1b5e20;
}

.status.placed {
  background-color: #d4edda;
  color: #155724;
}

.status.shipped {
  background-color: #cce5ff;
  color: #004085;
}

.status.delivered {
  background-color: #d1ecf1;
  color: #0c5460;
}

.status.cancelled {
  background-color: #f8d7da;
  color: #721c24;
}


  .delivery-timeline {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 30px 0;
    padding: 20px;
    background: linear-gradient(135deg, #fafafa 0%, #ffffff 100%);
    border-radius: 12px;
    border: 1px solid #f0f0f0;
  }

  .timeline-step {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex: 1;
    position: relative;
  }

  .timeline-step:not(:last-child)::after {
    content: '';
    position: absolute;
    top: 20px;
    left: 50%;
    width: 100%;
    height: 2px;
    background: #e0e0e0;
    z-index: 0;
  }

  .timeline-step.active:not(:last-child)::after {
    background: #1a1a1a;
    transition: background 0.3s ease;
  }

  .timeline-circle {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: white;
    border: 2px solid #ddd;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 700;
    color: #999;
    z-index: 1;
    transition: all 0.3s ease;
    margin-bottom: 10px;
  }

  .timeline-step.active .timeline-circle {
    background: #1a1a1a;
    border-color: #1a1a1a;
    color: white;
    box-shadow: 0 4px 12px rgba(26, 26, 26, 0.2);
    transform: scale(1.1);
  }

  .timeline-label {
    font-size: 0.9rem;
    font-weight: 600;
    color: #999;
    text-align: center;
    transition: color 0.3s ease;
  }

  .timeline-step.active .timeline-label {
    color: #1a1a1a;
  }

  @media (max-width: 768px) {
    .delivery-timeline {
      flex-direction: column;
      gap: 20px;
    }

    .timeline-step {
      width: 100%;
    }

    .timeline-step:not(:last-child)::after {
      width: 2px;
      height: 40px;
      left: 20px;
      top: 40px;
    }
  }

  @keyframes fadeInDown {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (max-width: 768px) {
    h2 {
      font-size: 1.8rem;
      margin-bottom: 25px;
    }

    .order-item {
      flex-direction: column;
      align-items: flex-start;
    }

    .order-item img {
      margin-right: 0;
      margin-bottom: 15px;
    }

    .summary-box h5:last-of-type {
      text-align: left;
    }

    .d-flex {
      flex-direction: column;
    }

    .btn {
      width: 100%;
    }
  }
</style>

<head>
  <meta charset="UTF-8">
  <title>Order Details - ZNEAKZ</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body class="bg-light py-4">
<div class="container">
  <h2 class="mb-4 text-center fw-bold">Order Details</h2>

  <div class="card p-4 mb-4">
    <p><strong>Order ID:</strong> <%= order.orderID %></p>
    <p class="mb-1 text-muted">Date: <%= new Date(order.createdAt).toLocaleDateString() %></p>
    <p class="mb-1 text-muted">Payment: <%= order.paymentMethod %></p>

    <%
      // Determine main status with return overrides
      let displayStatus = order.status;
      const allCancelled = order.items.every(i => i.status === "Cancelled");
      const someCancelled = order.items.some(i => i.status === "Cancelled");

      const hasReturnApproved = order.items.some(i => i.returnStatus === "Approved");
      const hasReturnRejected = order.items.some(i => i.returnStatus === "Rejected");

      if (allCancelled) displayStatus = "Cancelled";
      else if (someCancelled && order.status === "Placed") displayStatus = "Partially Cancelled";
      else if (hasReturnApproved) displayStatus = "Returned";
      else if (hasReturnRejected && order.status === "Delivered") displayStatus = "Delivered";
    %>

    <p>
      <strong>Status:</strong>
      <span class="status <%= displayStatus.toLowerCase().replace(/\s+/g, '-') %>">
        <%= displayStatus %>
      </span>
    </p>

    <h5 class="mt-3">Products:</h5>
    <ul class="list-unstyled">
     <% order.items.forEach(item => { 
     // compute effective display status
     let itemStatusDisplay = item.status;

     if (item.returnStatus === "Approved") {
       itemStatusDisplay = "Returned";
     } else if (item.returnStatus === "Requested") {
       itemStatusDisplay = "Return Requested";
     } else if (item.returnStatus === "Rejected" && item.status === "Delivered") {
       itemStatusDisplay = "Delivered";
     }
%>
  <li class="d-flex align-items-center mb-2 order-item">
    <img src="/uploads/products/<%= item.product.productImage[0] %>"
         alt="<%= item.product.productName %>"
         style="width: 60px; height: 60px; object-fit: cover; margin-right: 10px; border-radius: 5px;">

    <div class="flex-grow-1">
      <strong><%= item.product.productName %></strong><br>
      Brand: <%= item.product.brand || '—' %>, Size: <%= item.size %>, Qty: <%= item.quantity %>, Price: ₹<%= item.price %><br>

      <span class="status <%= itemStatusDisplay.toLowerCase().replace(/\s+/g, '-') %>">
        <%= itemStatusDisplay %>
      </span>
    </div>

    <% if(item.status === "Placed") { %>
      <!-- Cancel Button -->
      <form action="/orders/<%= order._id %>/items/<%= item._id %>/cancel" method="POST" class="d-inline">
        <button type="submit" class="btn btn-sm btn-outline-danger cancel-btn">Cancel Item</button>
      </form>
    <% } else if(item.status === "Delivered" && item.returnStatus === "None") { %>
      <!-- Return Button -->
      <a href="/orders/<%= order._id %>/items/<%= item._id %>/return" class="btn btn-sm btn-outline-warning">Return Item</a>
    <% } else if(item.returnStatus === "Requested") { %>
      <span class="badge bg-warning text-dark">Return Requested</span>
    <% } else if(item.returnStatus === "Approved") { %>
      <span class="badge bg-success">Return Approved</span>
    <% } else if(item.returnStatus === "Rejected") { %>
      <span class="badge bg-danger">Return Rejected</span>
    <% } %>
  </li>
<% }) %>

    </ul>

    <h5 class="mt-3">Shipping Address:</h5>
    <p><%= order.address.name %>, <%= order.address.city %>, <%= order.address.state %>, <%= order.address.pincode %></p>

    <h5 class="mt-4">Delivery Information:</h5>
    <ul class="list-group mb-3">
      <li class="list-group-item">
        <strong>Current Status:</strong> <%= displayStatus %>
      </li>
      <li class="list-group-item">
        <strong>Expected Delivery:</strong>
        <%= displayStatus === "Delivered" || displayStatus === "Returned"
            ? displayStatus
            : new Date(order.createdAt.getTime() + 5*24*60*60*1000).toLocaleDateString() %>
      </li>
      <li class="list-group-item">
        <strong>Shipped From:</strong> ZNEAKZ Warehouse, Kochi
      </li>
    </ul>

    <div class="delivery-timeline">
      <div class="timeline-step <%= ['Placed', 'Shipped', 'Out for Delivery', 'Delivered'].includes(order.status) ? 'active' : '' %>">
        <div class="timeline-circle">✓</div>
        <div class="timeline-label">Placed</div>
      </div>
      <div class="timeline-step <%= ['Shipped', 'Out for Delivery', 'Delivered'].includes(order.status) ? 'active' : '' %>">
        <div class="timeline-circle">✓</div>
        <div class="timeline-label">Shipped</div>
      </div>
      <div class="timeline-step <%= ['Out for Delivery', 'Delivered'].includes(order.status) ? 'active' : '' %>">
        <div class="timeline-circle">✓</div>
        <div class="timeline-label">Out for Delivery</div>
      </div>
      <div class="timeline-step <%= order.status === 'Delivered' ? 'active' : '' %>">
        <div class="timeline-circle">✓</div>
        <div class="timeline-label">Delivered</div>
      </div>
    </div>

    <div class="summary-box mt-4">
      <h5 class="fw-bold mb-3">Order Summary</h5>
      <% 
        let subtotal = 0;
        order.items.forEach(i => { if(i.status !== "Cancelled") subtotal += i.price * i.quantity; });
        let tax = subtotal * 0.05;
        let shipping = 50;
        let total = subtotal + tax + shipping;
      %>
      <p>Subtotal: ₹<%= subtotal.toFixed(2) %></p>
      <p>Tax (5%): ₹<%= tax.toFixed(2) %></p>
      <p>Shipping: ₹<%= shipping.toFixed(2) %></p>
      <hr>
      <h5>Total: ₹<%= total.toFixed(2) %></h5>
    </div>

    <div class="mt-4 d-flex flex-wrap gap-2">
      <% if(order.status === "Placed") { %>
        <form id="cancelOrderForm" action="/orders/<%= order._id %>/cancel" method="POST" class="me-2">
          <button type="button" id="cancelOrderBtn" class="btn btn-danger">Cancel Entire Order</button>
        </form>
      <% } %>
      <a href="/orders/<%= order._id %>/invoice" class="btn btn-outline-success">Download Invoice</a>
    </div>
  </div>

  <a href="/orders" id="btnn" class="btn btn-outline-dark">Back to Orders</a>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<script>
  // Cancel Order
  document.getElementById("cancelOrderBtn")?.addEventListener("click", function() {
    Swal.fire({
      title: "Are you sure?",
      text: "Do you really want to cancel this order?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, cancel it",
      cancelButtonText: "No, keep it"
    }).then((result) => { if(result.isConfirmed) document.getElementById("cancelOrderForm").submit(); });
  });

  // Cancel Item
  document.querySelectorAll(".cancel-btn").forEach(btn => {
    btn.addEventListener("click", function(e) {
      e.preventDefault();
      const form = this.closest("form");
      Swal.fire({
        title: "Cancel this item?",
        text: "This action cannot be undone.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, cancel it",
        cancelButtonText: "No"
      }).then((result) => { if(result.isConfirmed) form.submit(); });
    });
  });
</script>
<%- include("../partials/user/footer") %>


